## This `release` pipeline will create a new tag, release and release note
## from the first (latest) version specified in `./CHANGELOG.md`
##
name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'CHANGELOG.md'

permissions:
  contents: write # to publish a GitHub release

jobs:
  verify-changelog:
    name: Verify Changelog
    runs-on: ubuntu-latest
    if: github.repository_owner == 'spartan-stratos'
    outputs:
      is_releasable: ${{ steps.check_unreleased.outputs.is_releasable }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for [Unreleased] section
        id: check_unreleased
        run: |
          if grep -q "\[Unreleased\]" CHANGELOG.md; then
            echo "is_releasable=false" >> $GITHUB_OUTPUT
            echo "CHANGELOG.md contains [Unreleased] section - skipping release"
          else
            echo "is_releasable=true" >> $GITHUB_OUTPUT
            echo "CHANGELOG.md is ready for release"
          fi


  release:
    name: Release
    needs: verify-changelog
    runs-on: ubuntu-latest
    # Skip running release workflow on forks
    if: github.repository_owner == 'spartan-stratos' && needs.verify-changelog.outputs.is_releasable == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # To fetch all refs
          fetch-depth: 0
      

      # Extract the first (latest) version mentioned in the changelog
      - name: Extract Version from Changelog
        id: extract_version
        run: |
          VERSION=$(grep -oE '^## \[v?[0-9]+\.[0-9]+\.[0-9]+\]' CHANGELOG.md | head -1 | sed 's/^## \[//;s/]$//')
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Extract only the changelog content of specified version
      - name: Extract Changelog
        id: changelog
        uses: nickohold/changelog-version-extractor@v1.0.0
        with:
          version_prefix: "## ["
          version: ${{ env.VERSION }}
          changelog_path: "./CHANGELOG.md"

      # Echo the output from the `changelog` step
      - name: Echo the output
        run: echo "The Changelog is ${{ steps.changelog.outputs.changelog }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}             # This token is provided by Actions
        with:
          tag_name: "v${{ env.VERSION }}"                       # This should be v0.0.0
          release_name: "v${{ env.VERSION }}"                   # This should be v0.0.0
          body: "${{ steps.changelog.outputs.changelog }}"
          draft: false
          prerelease: false
